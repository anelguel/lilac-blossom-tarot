@model lilac_blossom_tarot.Pages.Spreads.DailyPullModel

@{

Random random = new Random();
int index = random.Next(0, 22);

var randomCard = @Model.DeckResults.cards[index];


<div class="container">
<div class="flip-card" onclick="this.classList.toggle('flipped'); document.querySelector('.text').classList.toggle('show')">
  <div class="flip-card-inner">
    <div class="flip-card-front">
      <img src="~/deck/questionmark.png" alt="card image" width=200px />
    </div>
    <div class="flip-card-back">
      <img src="~/deck/@(randomCard.value_int).png" alt="card image" width=200px />
    </div>
  </div>
</div>
<div class="text">
<p>name short:         @randomCard.name_short</p>
<p>name:               @randomCard.name</p>
<p>value:              @randomCard.value</p>
<p>value_int:          @randomCard.value_int</p>
<p>Meaning_up:         @randomCard.meaning_up</p>
<p>meaning_down:       @randomCard.meaning_rev</p>
<p>desc_up:            @randomCard.desc_up</p>


</div>
</div>

}


<style>
  /* Container for the flip card and text */
  .container {
    display: flex;
    flex-wrap: wrap;
  }
  
  /* Flip card styles */
  .flip-card {
    background-color: #f1f1f1;
    width: 200px;
    height: 275px;
    perspective: 1000px;
    cursor: pointer;
    margin-right: 20px;
    margin-bottom: 20px;
  }
  
  /* Flip card inner container */
  .flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.8s;
    transform-style: preserve-3d;
  }
  
  /* Flip card front face */
  .flip-card-front, .flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
  }
  
  /* Flip card front face styling */
  .flip-card-front {
    background-color: #bbb;
    color: black;
  }
  
  /* Flip card back face styling */
  .flip-card-back {
    background-color: #2980b9;
    color: white;
    transform: rotateY(180deg);
  }
  
  /* Flipped state styling */
  .flip-card.flipped .flip-card-inner {
    transform: rotateY(180deg);
  }
  
  /* Text styles */
  .text {
    flex: 1;
    display: none;
  }
  
  /* Show text when the show class is present */
  .show {
    display: block;
  }
</style>